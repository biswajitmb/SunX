;Trace magnetic field lines from given array of Bx[*,*,*], Bx[*,*,*], Bx[*,*,*]
;
;
;29.Mar.2022, Biswajit

data_files = file_search('/Users/bmondal/BM_Works/AR12749/0516UT/data/HMI/IDL/*.sav');Extrapolated magnetogram from "run_llf2.pro"

data_files = [data_files[0]]

OutDir = '/Users/bmondal/BM_Works/AR12749/0516UT/data/HMI/LFF/Traced_loops_PosNeg_SeedMaxZ050.0/'

N_lines = 5000;1000;

Min_Z = 0.1 ;Choose only the loops having a minimum height of Min_Z Mm

SeedMax_Z_loc = 0 ;Maximum Z-height (Mm) of random seed points.

Thresold_pos_B = 50.0;thresold positive or negative magnetic field above which pixcels will be selected for field-line tracing

Select_from_previous_file = 'n';If 'y' then the selection will be read from previous file
prev_sel_file_dir = '/Users/bmondal/BM_Works/MaGIXS/MaGIXS_1/XBP_1/Extrapolated_loops/Traced_loops_PosNeg_SeedMaxZ050.0/'

for m=0,n_elements(data_files)-1 do begin
    restore,data_files[m]
    ;name = (strsplit((strsplit(data_files[m],'/',/extract))[-1],'.',/extract))[0]
    name =     (STR_SEP((STR_SEP(data_files[m],'/'))[-1],'alp'))[0]
    ;FOV = 'FOV1';(strsplit(name,'_',/extract))[1]
    XBP_no = 'Reg001';(strsplit(name,'_',/extract))[2]
    alpha = (STR_SEP((STR_SEP((STR_SEP((STR_SEP(data_files[m],'/'))[-1],'alp'))[-1],'_'))[1],'.')) 
    alpha = alpha[0]+'.'+alpha[1]
    FOV = 'alpha_'+alpha 
    ;Bx=B3dx
    ;By=B3dy
    ;Bz=B3dz
    ;Bx = Bvx
    bx1=Bx
    bx2=By
    bx3=Bz
    
    origin = 0
    x1 = origin + (findgen(n_elements(Bz[*,0,0]))*0.36250001) ;in Mm
    x2 = origin + (findgen(n_elements(Bz[0,*,0]))*0.36250001) 
    x3 = findgen(n_elements(Bz[0,0,*]))*0.36250001 

    if Select_from_previous_file ne 'y' then begin 
        decession = 'y'
        while decession eq 'y' do begin
            for ii=0,1 do begin ;Select the region where the seed points should be
                WINDOW, 1, XSIZE=400, YSIZE=400
                device,retain=2
                if ii eq 0 then  begin
            	plot_image,bz[*,*,0],XTICKLAYOUT=1,YTICKLAYOUT=1,POSITION=[0.1,0.1,0.95,0.95],MAX=200,MIN=-200
                    print,'select location of box left-bottom'
            	cursor,sx0,sy0, /DATA
                print,sx0,sy0
                endif
                if ii eq 1 then begin
            	plot_image,bz[*,*,0],XTICKLAYOUT=1,YTICKLAYOUT=1,POSITION=[0.1,0.1,0.95,0.95],MAX=200,MIN=-200
                    print,'select location of box top-right'
                    cursor,sx1,sy1, /DATA
                    print,sx1,sy1
                endif
               print,ii
               ;ii += 1
               wait,0.2 
            endfor
            READ, decession, PROMPT='Do you want to re-do selection? (y/n)'
            if decession eq 'y' then plot_image,bz[*,*,0],XTICKLAYOUT=1,YTICKLAYOUT=1,POSITION=[0.1,0.1,0.95,0.95],MAX=100,MIN=-100
        endwhile
    endif else begin
	Result = READ_ASCII(prev_sel_file_dir+FOV+'/HMIcut_'+FOV+'_'+XBP_no+'_Extrapolated.dat',COUNT=Cariable, HEADER=h,DATA_START=7)
        sx0 = float((strsplit(h[0+1],'=',/extract))[1])
	sy0 = float((strsplit(h[2+1],'=',/extract))[1])
	sx1 = float((strsplit(h[1+1],'=',/extract))[1])
	sy1 = float((strsplit(h[3+1],'=',/extract))[1])
    endelse
    ;stop
    print,sx0,sy0
    print,sx1,sy1
    bz00 = bz[fix(sx0):fix(sx1),fix(sy0):fix(sy1),0] ;Smaller area within the selection
    ;nonzero_px_loc = where(bz00 gt Thresold_pos_B,npix)  
    nonzero_px_loc = where(((bz00 gt Thresold_pos_B) or (bz00 lt -Thresold_pos_B)),npix)
    nonzero_px_ind = ARRAY_INDICES(bz00, nonzero_px_loc)
    nonzero_px_ind[0,*] = nonzero_px_ind[0,*]+sx0 ;Convert selected area to the origiginal bz area
    nonzero_px_ind[1,*] = nonzero_px_ind[1,*]+sy0
    n_dim = n_elements(nonzero_px_ind[0,*])
    xloc = fix(RANDOMU(seed,N_lines)*n_dim)
    outname = OutDir+FOV+'/'+name+'.dat'
    
    if (file_test(OutDir+FOV) eq 0) then FILE_MKDIR,OutDir+FOV
    if (file_test(OutDir+FOV+'/'+XBP_no) eq 1) then spawn,'rm -r '+OutDir+FOV+'/'+XBP_no
    if (file_test(OutDir+FOV+'/'+XBP_no) eq 0) then FILE_MKDIR,OutDir+FOV+'/'+XBP_no
    get_lun,u
    openw,u,outname
    printf,u,'#Generated by trace_fields.pro'
    printf,u,'#box_x0='+strtrim(string(sx0),1)
    printf,u,'#box_x1='+strtrim(string(sx1),1)
    printf,u,'#box_y0='+strtrim(string(sy0),1)
    printf,u,'#box_y1='+strtrim(string(sy1),1)
    printf,u,'#'
    printf,u,'#Loop_index, seed_x(pixcel loc), seed_y, seed_z'
    l_ind1 = 0

    for l=0,N_lines-1 do begin
      
	x11 = nonzero_px_ind[0,xloc[l]] 
	y11 = nonzero_px_ind[1,xloc[l]]

        ;loc = [origin+(x11* 0.36250001),origin+(y11* 0.36250001),0.0* 0.36250001] ;Cnsidering all the seed points at z=0 plane
	z_h = SeedMax_Z_loc
        z_see = RANDOMU(seed,1)*z_h
	loc = [origin+(x11* 0.36250001),origin+(y11* 0.36250001),z_see] ;Cnsidering all the seed points within a box of height z_h
        printf,u,strtrim(string(l_ind1),1),x11,y11, fix(z_see/0.36250001),format='(A,1x,f0.4,1x,f0.4,1x,f0.4)'  
        field_line,bx1,bx2,bx3,x1,x2,x3,seed=loc,pl;,method='RK4';step=1.0
        
        ;NOW we will calculate field line length and will assign 
        ;length value over tracing points
        ;Get field line coordinates in 1D
        px=reform(pl[0,*])
        py=reform(pl[1,*])
        pz=reform(pl[2,*])

	ind = where(pz ge 0.0) ;Reject the lengths benith the photosphere
	px=px[ind]
        py=py[ind]
        pz=pz[ind]
        nz = n_elements(pz)
        
        ;Find the grid points of pl
        igx=value_locate (x1, px)
        igy=value_locate (x2, py)
        igz=value_locate (x3, pz)
        
        ;locate the magneticfield on those points
        bx1_field=bx(igx,igy,igz)
        bx2_field=by(igx,igy,igz)
        bx3_field=bz(igx,igy,igz)
        
        length=sqrt((px[1:*]-px[0:nz-2])^2.+(py[1:*]-py[0:nz-2])^2.+((pz[1:*]-pz[0:nz-2])^2.))
        total_length = total(length)
        mod_B = sqrt(bx1_field^2  + bx2_field^2 + bx3_field^2)
        
        if max(pz) gt Min_Z then  begin ;Choose only the loops having a minimum height of 0.2 Mm
		l_ind1 += 1
		get_lun,v
                openw,v,OutDir+FOV+'/'+XBP_no+'/'+'LoopInd_'+int2ext2(l_ind1)+'_'+name+'.dat'
                printf,v,'#Generated by trace_fields.pro'
		printf,v,'#x(Mm), y(Mm), z(Mm), Bz(G) ,By(G) ,Bz(G) '
                for ll=0,n_elements(px)-1 do begin
			printf,v,px[ll],py[ll],pz[ll],bx1_field[ll],bx2_field[ll],bx3_field[ll],format='(f0.4,1x,f0.4,1x,f0.4,1x,f0.4,1x,f0.4,1x,f0.4)'
		endfor
		free_lun,v
		print,u,l_ind1,sx0,sy0,sx1,sy1,x11,y11,total_length
	endif
    endfor
    free_lun,u
endfor    
END
